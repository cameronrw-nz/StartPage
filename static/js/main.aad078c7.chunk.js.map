{"version":3,"sources":["Icons/email.svg","Icons/github.svg","Icons/map.svg","Icons/reddit.svg","Icons/twitch.svg","Icons/youtube.svg","Widgets/Search/Resources/GoogleIcon.svg","Widgets/Search/Resources/RedditIcon.svg","Widgets/Search/Resources/YoutubeIcon.svg","Widgets/Weather/Resources/brokenClouds.svg","Widgets/Weather/Resources/clearSky.svg","Widgets/Weather/Resources/fewClouds.svg","Widgets/Weather/Resources/fog.svg","Widgets/Weather/Resources/heavyRain.svg","Widgets/Weather/Resources/rain.svg","Widgets/Weather/Resources/scatteredClouds.svg","Widgets/Weather/Resources/snow.svg","Widgets/Weather/Resources/thunderStorm.svg","Widgets/DateBar.js","Widgets/IconBar.js","Widgets/SidePanel/RedditView.js","Widgets/SidePanel/RedditController.js","Api/Api.js","Widgets/SidePanel/CurrencyConversion.js","Widgets/SidePanel/Links.js","Widgets/SidePanel/SidePanel.js","Widgets/Search/SearchBar.js","Widgets/Weather/WeatherView.js","Widgets/Weather/WeatherController.js","Panels.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","DateBlock","_ref","timeZone","time","date","react_default","a","createElement","Fragment","className","DateBar","_useState","useState","Date","_useState2","Object","slicedToArray","dateTime","setDateTime","intervalRef","useRef","useEffect","current","setInterval","clearInterval","localDate","toLocaleString","weekday","year","month","day","localTime","toLocaleTimeString","nzTime","moment","toString","tz","format","nzDate","Icon","props","href","url","src","logo","alt","IconBar","EmailLogo","GitHubLogo","GoogleMaps","RedditLogo","TwitchLogo","YoutubeLogo","RedditView","content","redditContent","isLoggedIn","map","item","name","link","concat","isLoading","onClick","pickRandom","onSubmit","type","placeholder","errorMessage","allowedSubreddits","RedditController","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getSavedItems","asyncToGenerator","regenerator_default","mark","_callee","username","password","r","hasError","me","saved","savedCategories","items","wrap","_context","prev","next","snoowrap","userAgent","clientId","process","clientSecret","getMe","catch","e","sent","setState","abrupt","getSavedContent","Map","forEach","element","find","subreddit_name_prefixed","push","title","permalink","undefined","get","set","fetchMore","skipReplies","amount","error","stop","_x","_x2","apply","arguments","preventDefault","target","value","state","bind","assertThisInitialized","randomItemIndex","Math","floor","random","length","slice","randomSavedItems","SidePanel_RedditView","React","Component","axios","CurrencyConversion","thb","setThb","_useState3","_useState4","nzd","setNzd","_useState5","_useState6","nzdToThb","setNzdToThb","_getCurrencyConversion","Api","then","response","data","NZD_THB","val","parseFloat","toFixed","console","log","onInput","Link","links","handleSubmit","handleLinkChange","handleNameChange","JSON","parse","window","localStorage","getItem","currentLink","currentName","setItem","stringify","localStorageLinks","index","splice","_this2","style","display","flexDirection","width","removeLink","SidePanel","SearchBar","currentProviderIndex","setProviderIndex","providers","action","icon","GoogleIcon","YoutubeIcon","RedditIcon","method","maxNoOfProviders","currentIndex","handleClick","autoComplete","onKeyDown","event","keyCode","handleProviderChange","formatTemperature","temp","round","WeatherView","currentWeather","weatherId","ThunderStorm","Rain","HeavyRain","Snow","Fog","ClearSky","FewClouds","ScatteredClouds","BrokenClouds","fontSize","tempMin","tempMax","sunriseTime","sunsetTime","WeatherController","getMyLocation","location","navigator","geolocation","getCurrentPosition","position","getWeatherData","coords","latitude","longitude","weather","id","main","temp_max","temp_min","wind","speed","sys","sunrise","sunset","_this3","Weather_WeatherView","Panels","SidePanel_RedditController","SidePanel_CurrencyConversion","Links","App","Weather_WeatherController","Widgets_DateBar","Widgets_IconBar","Search_SearchBar","src_Panels","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"qHAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4VC4BxC,SAASC,EAATC,GAA6C,IAAxBC,EAAwBD,EAAxBC,SAAUC,EAAcF,EAAdE,KAAMC,EAAQH,EAARG,KACjC,OACIC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACVN,GAELE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACVL,GAELC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACVP,KAONQ,MA3Cf,WAAmB,IAAAC,EACiBC,mBAAS,IAAIC,MAD9BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACRM,EADQH,EAAA,GACEI,EADFJ,EAAA,GAETK,EAAcC,mBAEpBC,oBAAU,WAGL,OAFDF,EAAYG,QAAUC,YAAY,kBAAML,EAAY,IAAIL,OAAS,KAEzD,WACHW,cAAcL,EAAYG,YAInC,IAAIG,EAAYR,EAASS,eAAe,QAAS,CAACC,QAAS,QAASC,KAAM,UAAWC,MAAO,OAAQC,IAAK,YACrGC,EAAYd,EAASe,mBAAmB,SACxCC,EAASC,IAAOjB,EAASkB,YAAYC,GAAG,MAAMC,OAAO,YACrDC,EAASJ,IAAOjB,EAASkB,YAAYC,GAAG,MAAMC,OAAO,oBAEzD,OACIhC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAACP,EAAD,CAAWE,SAAS,oBAAoBC,KAAM4B,EAAW3B,KAAMqB,IAC/DpB,EAAAC,EAAAC,cAACP,EAAD,CAAWE,SAAS,4BAA4BC,KAAM8B,EAAQ7B,KAAMkC,kHCDhF,SAASC,EAAKC,GACV,OACInC,EAAAC,EAAAC,cAAA,KAAGkC,KAAMD,EAAME,KACXrC,EAAAC,EAAAC,cAAA,OAAKoC,IAAKH,EAAMI,KAAMnC,UAAU,gBAAgBoC,IAAI,UAKjDC,MArBf,WACI,OACIzC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAACgC,EAAD,CAAMG,IAAI,sCAAsCE,KAAMG,MACtD1C,EAAAC,EAAAC,cAACgC,EAAD,CAAMG,IAAI,kCAAkCE,KAAMI,MAClD3C,EAAAC,EAAAC,cAACgC,EAAD,CAAMG,IAAI,yBAAyBE,KAAMK,MACzC5C,EAAAC,EAAAC,cAACgC,EAAD,CAAMG,IAAI,qBAAqBE,KAAMM,MACrC7C,EAAAC,EAAAC,cAACgC,EAAD,CAAMG,IAAI,kCAAkCE,KAAMO,MAClD9C,EAAAC,EAAAC,cAACgC,EAAD,CAAMG,IAAI,sBAAsBE,KAAMQ,kGCqCnCC,MApDf,SAAoBb,GAChB,IAAIc,EACAC,EAiCJ,OA/BIf,EAAMgB,YACFhB,EAAMc,UACNC,EAAgBf,EAAMc,QAAQG,IAAI,SAAAC,GAC9B,OAqCOC,EArCcD,EAAKC,KAqCbC,EArCmBF,EAAKE,KAuC7CvD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAAA,KAAGkC,KAAI,sBAAAoB,OAAwBD,IAASD,IAHpD,IAAuBA,EAAMC,KAjCrBN,EAAUd,EAAMsB,UACZzD,EAAAC,EAAAC,cAAA,yBAEAF,EAAAC,EAAAC,cAAA,OAAKwD,QAASvB,EAAMwB,YAApB,gCAGJV,EACIjD,EAAAC,EAAAC,cAAA,QAAM0D,SAAUzB,EAAMyB,UAClB5D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBACXJ,EAAAC,EAAAC,cAAA,SAAO2D,KAAK,OAAOP,KAAK,WAAWQ,YAAY,aAC/C9D,EAAAC,EAAAC,cAAA,SACI2D,KAAK,WACLP,KAAK,WACLQ,YAAY,aAEhB9D,EAAAC,EAAAC,cAAA,UAAQ2D,KAAK,SAASzD,UAAU,4BAAhC,MAIJJ,EAAAC,EAAAC,cAAA,WAAMiC,EAAM4B,eAMpB/D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACXJ,EAAAC,EAAAC,cAAA,0BACCgD,EACAD,ICpCPe,EAAoB,CACtB,YACA,gBACA,WACA,qBACA,WACA,eACA,gBA+JWC,cA3JX,SAAAA,EAAY9B,GAAO,IAAA+B,EAAA,OAAAxD,OAAAyD,EAAA,EAAAzD,CAAA0D,KAAAH,IACfC,EAAAxD,OAAA2D,EAAA,EAAA3D,CAAA0D,KAAA1D,OAAA4D,EAAA,EAAA5D,CAAAuD,GAAAM,KAAAH,KAAMjC,KAuBVqC,cAxBmB,eAAA5E,EAAAc,OAAA+D,EAAA,EAAA/D,CAAAgE,EAAAzE,EAAA0E,KAwBH,SAAAC,EAAOC,EAAUC,GAAjB,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAV,EAAAzE,EAAAoF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAENT,EAAI,IAAIU,IAAS,CACnBC,UAAW,6BACXC,SAAUC,iBACVC,aAAcD,8BACdf,SAAUA,EACVC,SAAUA,IAGVE,GAAW,EAVHM,EAAAE,KAAA,EAWGT,EAAEe,QAAQC,MAAM,SAAAC,GAAC,OAAKhB,GAAW,IAXpC,UAWRC,EAXQK,EAAAW,MAaRjB,EAbQ,CAAAM,EAAAE,KAAA,gBAcRtB,EAAKgC,SAAS,CACV/C,YAAY,EACZY,aAAc,wCAhBVuB,EAAAa,OAAA,kBAoBRjC,EAAKgC,SAAS,CAAE/C,YAAY,IApBpB,eAAAmC,EAAAE,KAAA,GAsBMP,EAAGmB,kBAtBT,eAsBRlB,EAtBQI,EAAAW,KAwBRd,EAAkB,IAAIkB,IACtBjB,EAAQ,GACZF,EAAMoB,QAAQ,SAAAC,GAENvC,EAAkBwC,KACd,SAAAlD,GAAI,OAAIA,IAASiD,EAAQE,4BAG7BrB,EAAMsB,KAAK,CAAEpD,KAAMiD,EAAQI,MAAOpD,KAAMgD,EAAQK,iBAG5CC,IADA1B,EAAgB2B,IAAIP,EAAQE,yBAG5BtB,EAAgB4B,IAAIR,EAAQE,wBAAyB,CACjD,CAAEnD,KAAMiD,EAAQI,MAAOC,UAAWL,EAAQK,aAG9CzB,EAAgB2B,IAAIP,EAAQE,yBAAyBC,KAAK,CACtDpD,KAAMiD,EAAQI,MACdC,UAAWL,EAAQK,eAMnC1C,EAAKgC,SAAS,CAAEd,UAChBlB,EAAKP,aAlDO2B,EAAAE,KAAA,GAqDEN,EAAM8B,UAAU,CAC1BC,aAAa,EACbC,OAAQ,MAvDA,eAqDZhC,EArDYI,EAAAW,KAyDZ/B,EAAKgC,SAAS,CAAEiB,MAAO,iBAEvBhC,EAAkB,IAAIkB,IACtBjB,EAAQ,GACRF,EAAMoB,QAAQ,SAAAC,GAENvC,EAAkBwC,KACd,SAAAlD,GAAI,OAAIA,IAASiD,EAAQE,4BAG7BrB,EAAMsB,KAAK,CAAEpD,KAAMiD,EAAQI,MAAOpD,KAAMgD,EAAQK,iBAG5CC,IADA1B,EAAgB2B,IAAIP,EAAQE,yBAG5BtB,EAAgB4B,IAAIR,EAAQE,wBAAyB,CACjD,CAAEnD,KAAMiD,EAAQI,MAAOC,UAAWL,EAAQK,aAG9CzB,EAAgB2B,IAAIP,EAAQE,yBAAyBC,KAAK,CACtDpD,KAAMiD,EAAQI,MACdC,UAAWL,EAAQK,eAKnC1C,EAAKgC,SAAS,CAAEd,UAnFJE,EAAAa,OAAA,UAoFL,GApFK,yBAAAb,EAAA8B,SAAAxC,EAAAR,SAxBG,gBAAAiD,EAAAC,GAAA,OAAA1H,EAAA2H,MAAAnD,KAAAoD,YAAA,GAAAtD,EA8HnBN,SAAW,SAAAoC,GACPA,EAAEyB,iBACF,IAAM5C,EAAWmB,EAAE0B,OAAO,GAAGC,MACvB7C,EAAWkB,EAAE0B,OAAO,GAAGC,MAE7B,GAAI9C,GAAYC,EACZ,IACIZ,EAAKM,cAAcK,EAAUC,GAC/B,MAAOkB,GACL9B,EAAKgC,SAAS,CAAEiB,MAAOnB,MApI/B9B,EAAK0D,MAAQ,CACTzC,qBAAiB0B,GAGrB3C,EAAKP,WAAaO,EAAKP,WAAWkE,KAAhBnH,OAAAoH,EAAA,EAAApH,QAAAoH,EAAA,EAAApH,CAAAwD,KAPHA,4OAiBLE,KAAKI,cACPoB,GACAA,2IA6FR,GAAKxB,KAAKwD,MAAMxC,MAAhB,CAIA,IAAM2C,EAAkBC,KAAKC,MACzBD,KAAKE,UAAY9D,KAAKwD,MAAMxC,MAAM+C,OAAS,IAE3C/C,EAAQhB,KAAKwD,MAAMxC,MAAMgD,MACzBL,EACAA,EAAkB,GAEtB3D,KAAK8B,SAAS,CAAEmC,iBAAkBjD,sCAkBlC,OACIpF,EAAAC,EAAAC,cAACoI,EAAD,CACIrF,QAASmB,KAAKwD,MAAMS,iBACpBlB,MAAO/C,KAAKwD,MAAMT,MAClB1D,eAAgCoD,IAArBzC,KAAKwD,MAAMxC,MACtBzB,WAAYS,KAAKT,WACjBR,WAAYiB,KAAKwD,MAAMzE,WACvBS,SAAUQ,KAAKR,SACfG,aAAcK,KAAKwD,MAAM7D,sBAtJVwE,IAAMC,uECb9B,SAAA5D,IAAA,OAAAF,EAAAzE,EAAAoF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAa,OAAA,SACIsC,IACF3B,IAAI,yGAFN,wBAAAxB,EAAA8B,SAAAxC,EAAAR,gCCkDQsE,MAhDf,WAA8B,IAAApI,EACJC,mBAAS,GADLE,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACnBqI,EADmBlI,EAAA,GACdmI,EADcnI,EAAA,GAAAoI,EAEJtI,mBAAS,GAFLuI,EAAApI,OAAAC,EAAA,EAAAD,CAAAmI,EAAA,GAEnBE,EAFmBD,EAAA,GAEdE,EAFcF,EAAA,GAAAG,EAGM1I,mBAAS,GAHf2I,EAAAxI,OAAAC,EAAA,EAAAD,CAAAuI,EAAA,GAGnBE,EAHmBD,EAAA,GAGTE,EAHSF,EAAA,GAyB1B,OApBAlI,oBAAU,YDPP,WAAP,OAAAqI,EAAA9B,MAAAnD,KAAAoD,YCQQ8B,GAA4BC,KAAK,SAAAC,GACxBA,GAAaA,EAASC,MAASD,EAASC,KAAKC,UAGlDN,EAAYI,EAASC,KAAKC,QAAQC,KAClCf,GAAQgB,WAAWb,GAAOS,EAASC,KAAKC,QAAQC,KAAKE,QAAQ,SAarEC,QAAQC,IAAR,QAAAvG,OAAoBuF,EAApB,WAAAvF,OAAiCmF,IAE7B3I,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACXJ,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBACXJ,EAAAC,EAAAC,cAAA,SACI2D,KAAK,OACLC,YAAY,MACZR,KAAK,MACLqE,MAAOgB,EACPqB,QAdhB,SAAsBhE,GAClBgD,GAAQY,WAAW5D,EAAE0B,OAAOC,OAASwB,GAAUU,QAAQ,IACvDjB,EAAO5C,EAAE0B,OAAOC,UAcR3H,EAAAC,EAAAC,cAAA,SACI2D,KAAK,OACLC,YAAY,MACZR,KAAK,MACLqE,MAAOoB,EACPiB,QA1BhB,SAAsBhE,GAClBgD,EAAOhD,EAAE0B,OAAOC,OAChBiB,GAAQgB,WAAW5D,EAAE0B,OAAOC,OAASwB,GAAUU,QAAQ,UC8EhDI,cAhGX,SAAAA,EAAY9H,GAAO,IAAA+B,EAAA,OAAAxD,OAAAyD,EAAA,EAAAzD,CAAA0D,KAAA6F,IACf/F,EAAAxD,OAAA2D,EAAA,EAAA3D,CAAA0D,KAAA1D,OAAA4D,EAAA,EAAA5D,CAAAuJ,GAAA1F,KAAAH,KAAMjC,KAEDyF,MAAQ,CACTsC,WAAOrD,GAGX3C,EAAKiG,aAAejG,EAAKiG,aAAatC,KAAlBnH,OAAAoH,EAAA,EAAApH,QAAAoH,EAAA,EAAApH,CAAAwD,KACpBA,EAAKkG,iBAAmBlG,EAAKkG,iBAAiBvC,KAAtBnH,OAAAoH,EAAA,EAAApH,QAAAoH,EAAA,EAAApH,CAAAwD,KACxBA,EAAKmG,iBAAmBnG,EAAKmG,iBAAiBxC,KAAtBnH,OAAAoH,EAAA,EAAApH,QAAAoH,EAAA,EAAApH,CAAAwD,KATTA,mFAaf,IAAIgG,EAAQI,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,UAEnDtG,KAAK8B,SAAS,CAACgE,iDAIf,IAAIA,EAAQ9F,KAAKwD,MAAMsC,MAClBA,IACDA,EAAQ,IAGZA,EAAMxD,KAAK,CAAEnD,KAAMa,KAAKwD,MAAM+C,YAAarH,KAAMc,KAAKwD,MAAMgD,cAE5DH,aAAaI,QAAQ,QAASP,KAAKQ,UAAUZ,IAC7C,IAAIa,EAAoBT,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,UAE/DtG,KAAK8B,SAAS,CACVgE,MAAOa,EACPJ,YAAa,GACbC,YAAa,8CAIJ5E,GACb5B,KAAK8B,SAAS,CAACyE,YAAa3E,EAAE0B,OAAOC,iDAGxB3B,GACb5B,KAAK8B,SAAS,CAAC0E,YAAa5E,EAAE0B,OAAOC,2CAG9BqD,GACP,IAAId,EAAQ9F,KAAKwD,MAAMsC,MAClBA,IACDA,EAAQ,IAGZA,EAAMe,OAAOD,EAAO,GAEpBP,aAAaI,QAAQ,QAASP,KAAKQ,UAAUZ,IAC7C,IAAIa,EAAoBT,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,UAE/DtG,KAAK8B,SAAS,CACVgE,MAAOa,qCAIN,IAAAG,EAAA9G,KACL,OACIpE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACXJ,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBACXJ,EAAAC,EAAAC,cAAA,SAAO2D,KAAK,OAAOC,YAAY,OAAO6D,MAAOvD,KAAKwD,MAAMgD,YAAaZ,QAAS5F,KAAKiG,mBACnFrK,EAAAC,EAAAC,cAAA,SAAO2D,KAAK,OAAOC,YAAY,OAAO6D,MAAOvD,KAAKwD,MAAM+C,YAAaX,QAAS5F,KAAKgG,mBACnFpK,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BAA2BsD,QAASU,KAAK+F,cAAxD,MAIJnK,EAAAC,EAAAC,cAAA,OAAKiL,MAAO,CAACC,QAAS,OAAQC,cAAe,WACxCjH,KAAKwD,MAAMsC,MACN9F,KAAKwD,MAAMsC,MAAM9G,IAAI,SAACmD,EAASyE,GAC7B,OACIhL,EAAAC,EAAAC,cAAA,OAAKiL,MAAO,CAACC,QAAS,OAAQE,MAAO,SACjCtL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAAA,KAAGkC,KAAMmE,EAAQhD,MACZgD,EAAQjD,OAGjBtD,EAAAC,EAAAC,cAAA,OACIE,UAAU,gCACVsD,QAAS,kBAAMwH,EAAKK,WAAWP,KAFnC,QAQV,cA1FPzC,IAAMC,WC4BVgD,0DCmDAC,MA3Ef,WAAqB,IAAAnL,EACgCC,mBAAS,GADzCE,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACVoL,EADUjL,EAAA,GACYkL,EADZlL,EAAA,GA0BbmL,EAAY,CACZ,CACIC,OAAQ,gCACR/H,YAAa,gBACbgI,KAAMC,KAEV,CACIF,OAAQ,+CACR/H,YAAa,iBACbgI,KAAME,KAEV,CACIH,OAAQ,gCACR/H,YAAa,gBACbgI,KAAMG,MAId,OACIjM,EAAAC,EAAAC,cAAA,QACI2L,OAAQD,EAAUF,GAAsBG,OACxCK,OAAO,MACP5I,KAAK,cAELtD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,OACIE,UAAU,kBACVsD,QAAS,kBApCzB,SAAqByI,GACjB,IAAIC,EAAeV,EAEnBC,KADAS,EAEqBD,EAAoBA,GACjCA,GA+BmBE,CAAYT,EAAUzD,UAErCnI,EAAAC,EAAAC,cAAA,OACIoC,IAAKsJ,EAAUF,GAAsBI,KACrCtJ,IAAI,4BAGZxC,EAAAC,EAAAC,cAAA,SACIE,UAAU,oBACVkM,aAAa,MACbzI,KAAK,OACLP,KAAK,IACLQ,YAAa8H,EAAUF,GAAsB5H,YAC7CyI,UAAW,SAAAC,GAAK,OA/DhC,SAA8BA,EAAOL,GACjC,IAAIC,EAAeV,EACG,KAAlBc,EAAMC,QACNL,IACyB,KAAlBI,EAAMC,SACbL,IAGJT,GACMS,EAAeD,EAAoBA,GACjCA,GAsDQO,CAAqBF,EAAOZ,EAAUzD,wMCf9D,SAASwE,GAAkBC,GACvB,OACI5E,KAAK6E,MAAa,GAAPD,GAAc,GAAK,QAIvBE,OApDf,SAAqB3K,GACjB,IAAI2J,EAAO,KACX,GAAuC,OAAnC3J,EAAM4K,eAAeC,UACrB,OAAQ7K,EAAM4K,eAAeC,UAAUlL,WAAW,IAC9C,IAAK,IAAKgK,EAAOmB,KAAc,MAC/B,IAAK,IAAKnB,EAAOoB,KAAM,MACvB,IAAK,IAAKpB,EAAOqB,KAAW,MAC5B,IAAK,IAAKrB,EAAOsB,KAAM,MACvB,IAAK,IAAKtB,EAAOuB,KAAK,MACtB,IAAK,IACD,OAAQlL,EAAM4K,eAAeC,WACzB,KAAK,IAAKlB,EAAOwB,KAAU,MAC3B,KAAK,IAAKxB,EAAOyB,KAAW,MAC5B,KAAK,IAAKzB,EAAO0B,KAAiB,MAClC,KAAK,IACL,KAAK,IAAK1B,EAAO2B,IAAc,MAC/B,QAAS3B,EAAO,KAEpB,MACJ,QAASA,EAAO,KAIxB,OACI9L,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACVuM,GAAkBxK,EAAM4K,eAAeH,MACxC5M,EAAAC,EAAAC,cAAA,OAAKoC,IAAKwJ,EAAM1L,UAAU,uBAAuBoC,IAAI,WAG7DxC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,6BACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAO+K,MAAO,CAACuC,SAAU,SACnCf,GAAkBxK,EAAM4K,eAAeY,SAAW,MAAQhB,GAAkBxK,EAAM4K,eAAea,UAEtG5N,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACV,YAAc,IAAII,KAAsC,IAAjC2B,EAAM4K,eAAec,aAAkBlM,mBAAmB,UAEtF3B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACV,WAAa,IAAII,KAAqC,IAAhC2B,EAAM4K,eAAee,YAAiBnM,mBAAmB,aCYrFoM,eAzDX,SAAAA,IAAc,IAAA7J,EAAA,OAAAxD,OAAAyD,EAAA,EAAAzD,CAAA0D,KAAA2J,IACV7J,EAAAxD,OAAA2D,EAAA,EAAA3D,CAAA0D,KAAA1D,OAAA4D,EAAA,EAAA5D,CAAAqN,GAAAxJ,KAAAH,QAEKwD,MAAQ,CACTmF,eAAgB,MAGpB7I,EAAK8J,cAAgB9J,EAAK8J,cAAcnG,KAAnBnH,OAAAoH,EAAA,EAAApH,QAAAoH,EAAA,EAAApH,CAAAwD,KAPXA,mFAWVE,KAAK4J,wDAGO,IAAA9C,EAAA9G,KACN6J,EAAWzD,OAAO0D,WAAa1D,OAAO0D,UAAUC,YAElDF,GACAA,EAASG,mBAAmB,SAACC,GACzBnD,EAAKoD,eAAeD,EAASE,OAAOC,SAAUH,EAASE,OAAOE,YAC/D,SAACtH,qFAOSqH,EAAUC,8EAC3BhG,IACK3B,IAAI,uDAAyD0H,EAAY,QAAUC,EAAY,+DAC/FlF,KACG,SAAAC,GAEI,IAAIuD,EAAiB,CACjBC,UAAWxD,EAASC,KAAKiF,QAAQ,GAAGC,GACpC/B,KAAMpD,EAASC,KAAKmF,KAAKhC,KACzBgB,QAASpE,EAASC,KAAKmF,KAAKC,SAC5BlB,QAASnE,EAASC,KAAKmF,KAAKE,SAC5BC,KAAMvF,EAASC,KAAKsF,KAAKC,MACzBnB,YAAarE,EAASC,KAAKwF,IAAIC,QAC/BpB,WAAYtE,EAASC,KAAKwF,IAAIE,QAElCC,EAAKlJ,SAAS,CACV6G,eAAiBA,4IAMjC,OACI/M,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACmC,OAA9BiE,KAAKwD,MAAMmF,eAA0B/M,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAACmP,GAAD,CAAatC,eAAgB3I,KAAKwD,MAAMmF,yBApDzExE,IAAMC,kBCUvB8G,OAVf,WACI,OACItP,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACXJ,EAAAC,EAAAC,cAACqP,EAAD,MACAvP,EAAAC,EAAAC,cAACsP,EAAD,MACAxP,EAAAC,EAAAC,cAACuP,EAAD,QCiBGC,OAhBf,WACI,OACI1P,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAACyP,GAAD,MACA3P,EAAAC,EAAAC,cAAC0P,EAAD,OAEJ5P,EAAAC,EAAAC,cAAA,UAAQE,UAAU,eACdJ,EAAAC,EAAAC,cAAC2P,EAAD,MACA7P,EAAAC,EAAAC,cAAC4P,EAAD,MACA9P,EAAAC,EAAAC,cAAC6P,GAAD,SCTIC,QACW,cAA7BxF,OAAOyD,SAASgC,UAEe,UAA7BzF,OAAOyD,SAASgC,UAEhBzF,OAAOyD,SAASgC,SAASC,MACvB,kECVNC,IAASC,OAAOpQ,EAAAC,EAAAC,cAACmQ,GAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBrC,WACrBA,UAAUsC,cAAcC,MAAMlH,KAAK,SAAAmH,GACjCA,EAAaC","file":"static/js/main.aad078c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/email.4082623a.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.1bb02710.svg\";","module.exports = __webpack_public_path__ + \"static/media/map.5b316389.svg\";","module.exports = __webpack_public_path__ + \"static/media/reddit.45bc9386.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitch.3974a3ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/youtube.198b0452.svg\";","module.exports = __webpack_public_path__ + \"static/media/GoogleIcon.b5908130.svg\";","module.exports = __webpack_public_path__ + \"static/media/RedditIcon.a0b0f5d7.svg\";","module.exports = __webpack_public_path__ + \"static/media/YoutubeIcon.a7c57edd.svg\";","module.exports = __webpack_public_path__ + \"static/media/brokenClouds.f857faf0.svg\";","module.exports = __webpack_public_path__ + \"static/media/clearSky.922f1f6e.svg\";","module.exports = __webpack_public_path__ + \"static/media/fewClouds.b0cf30aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/fog.ca88433d.svg\";","module.exports = __webpack_public_path__ + \"static/media/heavyRain.531d27ab.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.9a09d698.svg\";","module.exports = __webpack_public_path__ + \"static/media/scatteredClouds.844c1a55.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.b2c0182b.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunderStorm.0fff53ee.svg\";","import React, { useState, useEffect, useRef } from 'react'\r\nimport moment from 'moment-timezone'\r\n\r\nfunction DateBar() {\r\n    const [dateTime, setDateTime] = useState(new Date());\r\n    const intervalRef = useRef();\r\n\r\n    useEffect(() => {\r\n        intervalRef.current = setInterval(() => setDateTime(new Date()), 1000);\r\n\r\n         return function cleanup() {\r\n             clearInterval(intervalRef.current);\r\n         }\r\n    });\r\n\r\n    var localDate = dateTime.toLocaleString('th-TH', {weekday: 'short', year: 'numeric', month: 'long', day: 'numeric'});\r\n    var localTime = dateTime.toLocaleTimeString('it-IT');\r\n    var nzTime = moment(dateTime.toString()).tz('NZ').format('HH:mm:ss');\r\n    var nzDate = moment(dateTime.toString()).tz('NZ').format('ddd, D MMMM YYYY');\r\n\r\n    return (\r\n        <div className=\"date-block\">\r\n            <DateBlock timeZone=\"Bangkok, Thailand\" time={localTime} date={localDate} />\r\n            <DateBlock timeZone=\"Christchurch, New Zealand\" time={nzTime} date={nzDate} />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction DateBlock({ timeZone, time, date }) {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"date\">\r\n                <div className=\"date-time\">\r\n                    {time}\r\n                </div>\r\n                <div className=\"date-formatted\">\r\n                    {date}\r\n                </div>\r\n                <div className=\"date-formatted\">\r\n                    {timeZone}\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DateBar","import React from 'react'\r\n\r\nimport EmailLogo from '../Icons/email.svg'\r\nimport GitHubLogo from '../Icons/github.svg'\r\nimport GoogleMaps from '../Icons/map.svg'\r\nimport RedditLogo from '../Icons/reddit.svg'\r\nimport TwitchLogo from '../Icons/twitch.svg'\r\nimport YoutubeLogo from '../Icons/youtube.svg'\r\n\r\nfunction IconBar() {\r\n    return (\r\n        <div className=\"icon-bar\">\r\n            <Icon url=\"https://outlook.live.com/mail/inbox\" logo={EmailLogo} />\r\n            <Icon url=\"https://github.com/cameronrw-nz\" logo={GitHubLogo} />\r\n            <Icon url=\"http://maps.google.com\" logo={GoogleMaps} />\r\n            <Icon url=\"https://reddit.com\" logo={RedditLogo} />\r\n            <Icon url=\"https://www.twitch.tv/directory\" logo={TwitchLogo} />\r\n            <Icon url=\"https://youtube.com\" logo={YoutubeLogo} />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Icon(props) {\r\n    return (\r\n        <a href={props.url}>\r\n            <img src={props.logo} className=\"icon-bar-icon\" alt=\"logo\" />\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default IconBar","import React from \"react\";\r\n\r\nfunction RedditView(props) {\r\n    let content;\r\n    let redditContent;\r\n\r\n    if (props.isLoggedIn) {\r\n        if (props.content) {\r\n            redditContent = props.content.map(item => {\r\n                return GetRedditItem(item.name, item.link);\r\n            });\r\n        }\r\n\r\n        content = props.isLoading ? (\r\n            <div>Loading...</div>\r\n        ) : (\r\n            <div onClick={props.pickRandom}>Generate Saved Reddit Items</div>\r\n        );\r\n    } else {\r\n        content = (\r\n            <form onSubmit={props.onSubmit}>\r\n                <div className=\"sidepanel-link-input\">\r\n                    <input type=\"text\" name=\"username\" placeholder=\"username\" />\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"password\"\r\n                    />\r\n                    <button type=\"submit\" className=\"sidepanel-content-button\">\r\n                        +\r\n                    </button>\r\n                </div>\r\n                <div>{props.errorMessage}</div>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidepanel-content\">\r\n            <h2>Reddit Saved</h2>\r\n            {redditContent}\r\n            {content}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction GetRedditItem(name, link) {\r\n    return (\r\n        <div className=\"reddit-content\">\r\n            <a href={`https://reddit.com/${link}`}>{name}</a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RedditView;\r\n","import React from \"react\";\r\nimport snoowrap from \"snoowrap\";\r\n\r\nimport RedditView from \"./RedditView\";\r\n\r\nconst allowedSubreddits = [\r\n    \"r/reactjs\",\r\n    \"r/programming\",\r\n    \"r/webdev\",\r\n    \"r/learnprogramming\",\r\n    \"r/csharp\",\r\n    \"r/web_design\",\r\n    \"r/javascript\"\r\n];\r\n\r\nclass RedditController extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            savedCategories: undefined\r\n        };\r\n\r\n        this.pickRandom = this.pickRandom.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (\r\n            process.env.REACT_APP_REDDIT_USERNAME === \"\" ||\r\n            process.env.REACT_APP_REDDIT_PASSWORD === \"\"\r\n        ) {\r\n            return;\r\n        } else {\r\n            await this.getSavedItems(\r\n                process.env.REACT_APP_REDDIT_USERNAME,\r\n                process.env.REACT_APP_REDDIT_PASSWORD\r\n            );\r\n        }\r\n    }\r\n\r\n    getSavedItems = async (username, password) => {\r\n        // Replace with actual connection to reddit.\r\n        const r = new snoowrap({\r\n            userAgent: \"Saved Info/0.1 by Darzolak\",\r\n            clientId: process.env.REACT_APP_REDDIT_CLIENTID,\r\n            clientSecret: process.env.REACT_APP_REDDIT_CLIENTSECRET,\r\n            username: username,\r\n            password: password\r\n        });\r\n\r\n        var hasError = false;\r\n        var me = await r.getMe().catch(e => (hasError = true));\r\n\r\n        if (hasError) {\r\n            this.setState({\r\n                isLoggedIn: false,\r\n                errorMessage: \"Username or Password was incorrect.\"\r\n            });\r\n            return;\r\n        } else {\r\n            this.setState({ isLoggedIn: true });\r\n        }\r\n        var saved = await me.getSavedContent();\r\n\r\n        var savedCategories = new Map();\r\n        var items = [];\r\n        saved.forEach(element => {\r\n            if (\r\n                allowedSubreddits.find(\r\n                    name => name === element.subreddit_name_prefixed\r\n                )\r\n            ) {\r\n                items.push({ name: element.title, link: element.permalink });\r\n                if (\r\n                    savedCategories.get(element.subreddit_name_prefixed) ===\r\n                    undefined\r\n                ) {\r\n                    savedCategories.set(element.subreddit_name_prefixed, [\r\n                        { name: element.title, permalink: element.permalink }\r\n                    ]);\r\n                } else {\r\n                    savedCategories.get(element.subreddit_name_prefixed).push({\r\n                        name: element.title,\r\n                        permalink: element.permalink\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n        this.setState({ items });\r\n        this.pickRandom();\r\n\r\n        // Fetch More\r\n        saved = await saved.fetchMore({\r\n            skipReplies: true,\r\n            amount: 100\r\n        });\r\n        this.setState({ error: \"loaded saved\" });\r\n\r\n        savedCategories = new Map();\r\n        items = [];\r\n        saved.forEach(element => {\r\n            if (\r\n                allowedSubreddits.find(\r\n                    name => name === element.subreddit_name_prefixed\r\n                )\r\n            ) {\r\n                items.push({ name: element.title, link: element.permalink });\r\n                if (\r\n                    savedCategories.get(element.subreddit_name_prefixed) ===\r\n                    undefined\r\n                ) {\r\n                    savedCategories.set(element.subreddit_name_prefixed, [\r\n                        { name: element.title, permalink: element.permalink }\r\n                    ]);\r\n                } else {\r\n                    savedCategories.get(element.subreddit_name_prefixed).push({\r\n                        name: element.title,\r\n                        permalink: element.permalink\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        this.setState({ items });\r\n        return true;\r\n    };\r\n\r\n    pickRandom() {\r\n        if (!this.state.items) {\r\n            return;\r\n        }\r\n\r\n        const randomItemIndex = Math.floor(\r\n            Math.random() * (this.state.items.length - 7)\r\n        );\r\n        var items = this.state.items.slice(\r\n            randomItemIndex,\r\n            randomItemIndex + 7\r\n        );\r\n        this.setState({ randomSavedItems: items });\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const username = e.target[0].value;\r\n        const password = e.target[1].value;\r\n\r\n        if (username && password) {\r\n            try {\r\n                this.getSavedItems(username, password);\r\n            } catch (e) {\r\n                this.setState({ error: e });\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <RedditView\r\n                content={this.state.randomSavedItems}\r\n                error={this.state.error}\r\n                isLoading={this.state.items === undefined}\r\n                pickRandom={this.pickRandom}\r\n                isLoggedIn={this.state.isLoggedIn}\r\n                onSubmit={this.onSubmit}\r\n                errorMessage={this.state.errorMessage}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default RedditController;\r\n","import axios from \"axios\";\r\n\r\nexport async function getCurrencyConversion() {\r\n    return axios\r\n        .get(\"https://free.currencyconverterapi.com/api/v6/convert?q=NZD_THB&compact=y&apiKey=\" + process.env.REACT_APP_CURRENCY_APIKEY)\r\n}","import React, { useState, useEffect } from \"react\";\r\n\r\nimport * as Api from \"../../Api/Api\";\r\n\r\nfunction CurrencyConversion() {\r\n    const [thb, setThb] = useState(1);\r\n    const [nzd, setNzd] = useState(1);\r\n    const [nzdToThb, setNzdToThb] = useState(1);\r\n\r\n    useEffect(() => {\r\n        Api.getCurrencyConversion().then(response => {\r\n            if (!response || !response.data || !response.data.NZD_THB) {\r\n                return;\r\n            }\r\n            setNzdToThb(response.data.NZD_THB.val);\r\n            setThb((parseFloat(nzd) * response.data.NZD_THB.val).toFixed(2));\r\n        });\r\n    });\r\n\r\n    function onNZDChanged(e) {\r\n        setNzd(e.target.value);\r\n        setThb((parseFloat(e.target.value) * nzdToThb).toFixed(2));\r\n    }\r\n\r\n    function onTHBChanged(e) {\r\n        setNzd((parseFloat(e.target.value) / nzdToThb).toFixed(2));\r\n        setThb(e.target.value);\r\n    }\r\n    console.log(`NZD: ${nzd}, THB: ${thb}`);\r\n    return (\r\n        <div className=\"sidepanel-content\">\r\n            <h2>Currency Converter</h2>\r\n            <div className=\"sidepanel-link-input\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"THB\"\r\n                    name=\"thb\"\r\n                    value={thb}\r\n                    onInput={onTHBChanged}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"NZD\"\r\n                    name=\"nzd\"\r\n                    value={nzd}\r\n                    onInput={onNZDChanged}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CurrencyConversion;\r\n","import React from \"react\";\r\n\r\nclass Link extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            links: undefined\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleLinkChange = this.handleLinkChange.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        var links = JSON.parse(window.localStorage.getItem(\"links\"));\r\n\r\n        this.setState({links});\r\n    }\r\n\r\n    handleSubmit() {\r\n        var links = this.state.links;\r\n        if (!links) {\r\n            links = []\r\n        }\r\n\r\n        links.push({ link: this.state.currentLink, name: this.state.currentName });\r\n\r\n        localStorage.setItem(\"links\", JSON.stringify(links));\r\n        var localStorageLinks = JSON.parse(window.localStorage.getItem(\"links\"));\r\n\r\n        this.setState({\r\n            links: localStorageLinks,\r\n            currentLink: \"\",\r\n            currentName: \"\"\r\n        });\r\n    }\r\n\r\n    handleLinkChange(e) {\r\n        this.setState({currentLink: e.target.value});\r\n    }\r\n\r\n    handleNameChange(e) {\r\n        this.setState({currentName: e.target.value});\r\n    }\r\n\r\n    removeLink(index) {\r\n        var links = this.state.links;\r\n        if (!links) {\r\n            links = []\r\n        }\r\n\r\n        links.splice(index, 1);\r\n\r\n        localStorage.setItem(\"links\", JSON.stringify(links));\r\n        var localStorageLinks = JSON.parse(window.localStorage.getItem(\"links\"));\r\n\r\n        this.setState({\r\n            links: localStorageLinks,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sidepanel-content\">\r\n                <h2>Links</h2>\r\n                <div className=\"sidepanel-link-input\">\r\n                    <input type=\"text\" placeholder=\"Name\" value={this.state.currentName} onInput={this.handleNameChange} />\r\n                    <input type=\"text\" placeholder=\"Link\" value={this.state.currentLink} onInput={this.handleLinkChange} />\r\n                    <div className=\"sidepanel-content-button\" onClick={this.handleSubmit}>\r\n                        +\r\n                    </div>\r\n                </div>\r\n                <div style={{display: \"flex\", flexDirection: \"column\"}}>\r\n                    {this.state.links \r\n                        ? this.state.links.map((element, index) => {\r\n                            return (\r\n                                <div style={{display: \"flex\", width: \"100%\"}} >\r\n                                    <div className=\"reddit-content\">\r\n                                        <a href={element.link}>\r\n                                            {element.name}\r\n                                        </a>\r\n                                    </div>\r\n                                    <div \r\n                                        className=\"sidepanel-content-link-button\"\r\n                                        onClick={() => this.removeLink(index)}>\r\n                                        -\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                        : null}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Link;","import React, { useState } from \"react\";\r\n\r\nimport RedditController from \"./RedditController\";\r\nimport CurrencyConversion from \"./CurrencyConversion\";\r\nimport Link from \"./Links\";\r\n\r\nfunction SidePanel() {\r\n    const [isExpanded, setExpanded] = useState(false);\r\n\r\n    function handleExpand() {\r\n        setExpanded(!isExpanded);\r\n    }\r\n\r\n    var marginLeft = \"-355px\";\r\n    if (isExpanded === true) {\r\n        marginLeft = \"0px\";\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"sidepanel\" style={{ marginLeft: marginLeft }}>\r\n                <div className=\"sidepanel-expander\" onClick={handleExpand} />\r\n                <CurrencyConversion />\r\n                <RedditController />\r\n                <Link />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SidePanel;\r\n","import React, { useState } from \"react\";\r\n\r\nimport GoogleIcon from \"./Resources/GoogleIcon.svg\";\r\nimport RedditIcon from \"./Resources/RedditIcon.svg\";\r\nimport YoutubeIcon from \"./Resources/YoutubeIcon.svg\";\r\n\r\nfunction SearchBar() {\r\n    const [currentProviderIndex, setProviderIndex] = useState(0);\r\n\r\n    function handleProviderChange(event, maxNoOfProviders) {\r\n        var currentIndex = currentProviderIndex;\r\n        if (event.keyCode === 38) {\r\n            currentIndex--;\r\n        } else if (event.keyCode === 40) {\r\n            currentIndex++;\r\n        }\r\n\r\n        setProviderIndex(\r\n            ((currentIndex % maxNoOfProviders) + maxNoOfProviders) %\r\n                maxNoOfProviders\r\n        );\r\n    }\r\n\r\n    function handleClick(maxNoOfProviders) {\r\n        var currentIndex = currentProviderIndex;\r\n        currentIndex++;\r\n        setProviderIndex(\r\n            ((currentIndex % maxNoOfProviders) + maxNoOfProviders) %\r\n                maxNoOfProviders\r\n        );\r\n    }\r\n\r\n    var providers = [\r\n        {\r\n            action: \"https://www.google.com/search\",\r\n            placeholder: \"Search Google\",\r\n            icon: GoogleIcon\r\n        },\r\n        {\r\n            action: \"https://www.youtube.com/results?search_query\",\r\n            placeholder: \"Search Youtube\",\r\n            icon: YoutubeIcon\r\n        },\r\n        {\r\n            action: \"https://www.reddit.com/search\",\r\n            placeholder: \"Search Reddit\",\r\n            icon: RedditIcon\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <form\r\n            action={providers[currentProviderIndex].action}\r\n            method=\"get\"\r\n            name=\"searchform\"\r\n        >\r\n            <div className=\"search-bar\">\r\n                <div\r\n                    className=\"search-bar-icon\"\r\n                    onClick={() => handleClick(providers.length)}\r\n                >\r\n                    <img\r\n                        src={providers[currentProviderIndex].icon}\r\n                        alt=\"Switch Search Provider\"\r\n                    />\r\n                </div>\r\n                <input\r\n                    className=\"search-bar-search\"\r\n                    autoComplete=\"off\"\r\n                    type=\"text\"\r\n                    name=\"q\"\r\n                    placeholder={providers[currentProviderIndex].placeholder}\r\n                    onKeyDown={event =>\r\n                        handleProviderChange(event, providers.length)\r\n                    }\r\n                />\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from 'react'\r\n\r\nimport BrokenClouds from './Resources/brokenClouds.svg'\r\nimport ClearSky from './Resources/clearSky.svg'\r\nimport FewClouds from './Resources/fewClouds.svg'\r\nimport Fog from './Resources/fog.svg'\r\nimport HeavyRain from './Resources/heavyRain.svg'\r\nimport Rain from './Resources/rain.svg'\r\nimport ScatteredClouds from './Resources/scatteredClouds.svg'\r\nimport Snow from './Resources/snow.svg'\r\nimport ThunderStorm from './Resources/thunderStorm.svg'\r\n\r\nfunction WeatherView(props) {\r\n    let icon = null;\r\n    if (props.currentWeather.weatherId !== null){\r\n        switch (props.currentWeather.weatherId.toString()[0]) {\r\n            case \"2\": icon = ThunderStorm; break;\r\n            case \"3\": icon = Rain; break;\r\n            case \"5\": icon = HeavyRain; break;\r\n            case \"6\": icon = Snow; break;\r\n            case \"7\": icon = Fog; break;\r\n            case \"8\":\r\n                switch (props.currentWeather.weatherId) {\r\n                    case 800: icon = ClearSky; break;\r\n                    case 801: icon = FewClouds; break;\r\n                    case 802: icon = ScatteredClouds; break;\r\n                    case 803:\r\n                    case 804: icon = BrokenClouds; break;\r\n                    default: icon = null;\r\n                }\r\n                break;\r\n            default: icon = null;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"weather\">\r\n            <div className=\"weather-current-primary\">    \r\n                <div className=\"flex-item\">\r\n                    {formatTemperature(props.currentWeather.temp)}\r\n                    <img src={icon} className=\"weather-primary-icon\" alt=\"logo\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"weather-current-secondary\">\r\n                <div className=\"flex\" style={{fontSize: \"16px\"}}>\r\n                    {formatTemperature(props.currentWeather.tempMin) + \" - \" + formatTemperature(props.currentWeather.tempMax)}\r\n                </div>\r\n                <div className=\"flex\">\r\n                    {\"Sunrise: \" + new Date(props.currentWeather.sunriseTime*1000).toLocaleTimeString('it-IT')}\r\n                </div>\r\n                <div className=\"flex\">\r\n                    {\"Sunset: \" + new Date(props.currentWeather.sunsetTime*1000).toLocaleTimeString('it-IT')}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction formatTemperature(temp) {\r\n    return (\r\n        Math.round(temp * 10 ) / 10 + \"\\xB0C\"\r\n    )\r\n}\r\n\r\nexport default WeatherView","import React from 'react'\r\nimport axios from 'axios';\r\n\r\nimport WeatherView from './WeatherView'\r\n\r\nclass WeatherController extends React.Component {\r\n    constructor() {\r\n        super()\r\n    \r\n        this.state = {\r\n            currentWeather: null\r\n        }\r\n    \r\n        this.getMyLocation = this.getMyLocation.bind(this)\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.getMyLocation()\r\n    }\r\n    \r\n    getMyLocation() {\r\n        const location = window.navigator && window.navigator.geolocation\r\n        \r\n        if (location) {\r\n            location.getCurrentPosition((position) => {\r\n                this.getWeatherData(position.coords.latitude, position.coords.longitude)\r\n            }, (error) => {\r\n            })\r\n        }\r\n    \r\n    }\r\n\r\n    // Bad practice to show API key but since it's a free acc it doesn't matter \r\n    async getWeatherData(latitude, longitude) {\r\n        axios\r\n            .get(\"https://api.openweathermap.org/data/2.5/weather?lat=\" + latitude +  \"&lon=\" + longitude + \"&units=metric&dt=UTC&APPID=\" + process.env.REACT_APP_WEATHER_APIKEY)\r\n            .then( \r\n                response => {\r\n\r\n                    var currentWeather = {\r\n                        weatherId: response.data.weather[0].id,\r\n                        temp: response.data.main.temp,\r\n                        tempMax: response.data.main.temp_max,\r\n                        tempMin: response.data.main.temp_min,\r\n                        wind: response.data.wind.speed,\r\n                        sunriseTime: response.data.sys.sunrise,\r\n                        sunsetTime: response.data.sys.sunset,\r\n                    }\r\n                    this.setState({\r\n                        currentWeather:  currentWeather,\r\n                    })\r\n                });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.currentWeather === null ? <div /> : (<WeatherView currentWeather={this.state.currentWeather}/>)}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WeatherController","import React from \"react\";\r\nimport CurrencyConversion from \"./Widgets/SidePanel/CurrencyConversion\";\r\nimport RedditController from \"./Widgets/SidePanel/RedditController\";\r\nimport Link from \"./Widgets/SidePanel/Links\";\r\n\r\nfunction Panels() {\r\n    return (\r\n        <div className=\"panels\">\r\n            <RedditController />\r\n            <CurrencyConversion />\r\n            <Link />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Panels;\r\n","import React from \"react\";\r\n\r\nimport DateBar from \"./Widgets/DateBar\";\r\nimport IconBar from \"./Widgets/IconBar\";\r\nimport SidePanel from \"./Widgets/SidePanel/SidePanel\";\r\nimport SearchBar from \"./Widgets/Search/SearchBar\";\r\nimport Weather from \"./Widgets/Weather/WeatherController\";\r\n\r\nimport \"./Styles/App.css\";\r\nimport Panels from \"./Panels\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"app-header\">\r\n                <Weather />\r\n                <DateBar />\r\n            </div>\r\n            <header className=\"app-content\">\r\n                <IconBar />\r\n                <SearchBar />\r\n                <Panels />\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport \"./Styles/index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}